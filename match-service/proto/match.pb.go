// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: match-service/proto/match.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MatchRequest used for retrieving match updates by ID
type MatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	mi := &file_match_service_proto_match_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_service_proto_match_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_match_service_proto_match_proto_rawDescGZIP(), []int{0}
}

func (x *MatchRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

// MatchResponse contains current match data
type MatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	HomeScore     int32                  `protobuf:"varint,3,opt,name=home_score,json=homeScore,proto3" json:"home_score,omitempty"`
	AwayScore     int32                  `protobuf:"varint,4,opt,name=away_score,json=awayScore,proto3" json:"away_score,omitempty"`
	LastEvent     string                 `protobuf:"bytes,5,opt,name=last_event,json=lastEvent,proto3" json:"last_event,omitempty"`
	Possession    int32                  `protobuf:"varint,6,opt,name=possession,proto3" json:"possession,omitempty"`
	Shots         int32                  `protobuf:"varint,7,opt,name=shots,proto3" json:"shots,omitempty"`
	Fouls         int32                  `protobuf:"varint,8,opt,name=fouls,proto3" json:"fouls,omitempty"`
	Cards         []string               `protobuf:"bytes,9,rep,name=cards,proto3" json:"cards,omitempty"` // Added cards field
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchResponse) Reset() {
	*x = MatchResponse{}
	mi := &file_match_service_proto_match_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResponse) ProtoMessage() {}

func (x *MatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_service_proto_match_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResponse.ProtoReflect.Descriptor instead.
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return file_match_service_proto_match_proto_rawDescGZIP(), []int{1}
}

func (x *MatchResponse) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MatchResponse) GetHomeScore() int32 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *MatchResponse) GetAwayScore() int32 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

func (x *MatchResponse) GetLastEvent() string {
	if x != nil {
		return x.LastEvent
	}
	return ""
}

func (x *MatchResponse) GetPossession() int32 {
	if x != nil {
		return x.Possession
	}
	return 0
}

func (x *MatchResponse) GetShots() int32 {
	if x != nil {
		return x.Shots
	}
	return 0
}

func (x *MatchResponse) GetFouls() int32 {
	if x != nil {
		return x.Fouls
	}
	return 0
}

func (x *MatchResponse) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

// CreateMatchRequest for creating a new match
type CreateMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	HomeTeam      string                 `protobuf:"bytes,2,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`    // Add home_team
	AwayTeam      string                 `protobuf:"bytes,3,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`    // Add away_team
	StartTime     string                 `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Add start_time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMatchRequest) Reset() {
	*x = CreateMatchRequest{}
	mi := &file_match_service_proto_match_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMatchRequest) ProtoMessage() {}

func (x *CreateMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_service_proto_match_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMatchRequest.ProtoReflect.Descriptor instead.
func (*CreateMatchRequest) Descriptor() ([]byte, []int) {
	return file_match_service_proto_match_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMatchRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *CreateMatchRequest) GetHomeTeam() string {
	if x != nil {
		return x.HomeTeam
	}
	return ""
}

func (x *CreateMatchRequest) GetAwayTeam() string {
	if x != nil {
		return x.AwayTeam
	}
	return ""
}

func (x *CreateMatchRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

// New message for updating match events
type UpdateMatchEventRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MatchId         string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	EventType       string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`                      // e.g., "goal", "foul", "card", "substitution"
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                   // e.g., "Messi scores", "Ronaldo gets yellow card"
	HomeScoreChange int32                  `protobuf:"varint,4,opt,name=home_score_change,json=homeScoreChange,proto3" json:"home_score_change,omitempty"` // Use for goal events
	AwayScoreChange int32                  `protobuf:"varint,5,opt,name=away_score_change,json=awayScoreChange,proto3" json:"away_score_change,omitempty"` // Use for goal events
	CardColor       string                 `protobuf:"bytes,6,opt,name=card_color,json=cardColor,proto3" json:"card_color,omitempty"`                      // Use for card events (e.g., "yellow", "red")
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateMatchEventRequest) Reset() {
	*x = UpdateMatchEventRequest{}
	mi := &file_match_service_proto_match_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMatchEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMatchEventRequest) ProtoMessage() {}

func (x *UpdateMatchEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_service_proto_match_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMatchEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateMatchEventRequest) Descriptor() ([]byte, []int) {
	return file_match_service_proto_match_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMatchEventRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *UpdateMatchEventRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *UpdateMatchEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMatchEventRequest) GetHomeScoreChange() int32 {
	if x != nil {
		return x.HomeScoreChange
	}
	return 0
}

func (x *UpdateMatchEventRequest) GetAwayScoreChange() int32 {
	if x != nil {
		return x.AwayScoreChange
	}
	return 0
}

func (x *UpdateMatchEventRequest) GetCardColor() string {
	if x != nil {
		return x.CardColor
	}
	return ""
}

// Event details (similar to your Event class in the diagram)
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	MatchId       string                 `protobuf:"bytes,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	EventType     string                 `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // ISO 8601 format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_match_service_proto_match_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_match_service_proto_match_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_match_service_proto_match_proto_rawDescGZIP(), []int{4}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *Event) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// Required for GetAdminMatchList if you add it
type MatchListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matches       []*MatchResponse       `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchListResponse) Reset() {
	*x = MatchListResponse{}
	mi := &file_match_service_proto_match_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchListResponse) ProtoMessage() {}

func (x *MatchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_service_proto_match_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchListResponse.ProtoReflect.Descriptor instead.
func (*MatchListResponse) Descriptor() ([]byte, []int) {
	return file_match_service_proto_match_proto_rawDescGZIP(), []int{5}
}

func (x *MatchListResponse) GetMatches() []*MatchResponse {
	if x != nil {
		return x.Matches
	}
	return nil
}

var File_match_service_proto_match_proto protoreflect.FileDescriptor

const file_match_service_proto_match_proto_rawDesc = "" +
	"\n" +
	"\x1fmatch-service/proto/match.proto\x12\x05match\x1a\x1bgoogle/protobuf/empty.proto\")\n" +
	"\fMatchRequest\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\"\x81\x02\n" +
	"\rMatchResponse\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"home_score\x18\x03 \x01(\x05R\thomeScore\x12\x1d\n" +
	"\n" +
	"away_score\x18\x04 \x01(\x05R\tawayScore\x12\x1d\n" +
	"\n" +
	"last_event\x18\x05 \x01(\tR\tlastEvent\x12\x1e\n" +
	"\n" +
	"possession\x18\x06 \x01(\x05R\n" +
	"possession\x12\x14\n" +
	"\x05shots\x18\a \x01(\x05R\x05shots\x12\x14\n" +
	"\x05fouls\x18\b \x01(\x05R\x05fouls\x12\x14\n" +
	"\x05cards\x18\t \x03(\tR\x05cards\"\x88\x01\n" +
	"\x12CreateMatchRequest\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1b\n" +
	"\thome_team\x18\x02 \x01(\tR\bhomeTeam\x12\x1b\n" +
	"\taway_team\x18\x03 \x01(\tR\bawayTeam\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\tR\tstartTime\"\xec\x01\n" +
	"\x17UpdateMatchEventRequest\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12*\n" +
	"\x11home_score_change\x18\x04 \x01(\x05R\x0fhomeScoreChange\x12*\n" +
	"\x11away_score_change\x18\x05 \x01(\x05R\x0fawayScoreChange\x12\x1d\n" +
	"\n" +
	"card_color\x18\x06 \x01(\tR\tcardColor\"\x9c\x01\n" +
	"\x05Event\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x19\n" +
	"\bmatch_id\x18\x02 \x01(\tR\amatchId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"C\n" +
	"\x11MatchListResponse\x12.\n" +
	"\amatches\x18\x01 \x03(\v2\x14.match.MatchResponseR\amatches2\x9d\x02\n" +
	"\fMatchService\x12<\n" +
	"\x0fGetMatchUpdates\x12\x13.match.MatchRequest\x1a\x14.match.MatchResponse\x12>\n" +
	"\vCreateMatch\x12\x19.match.CreateMatchRequest\x1a\x14.match.MatchResponse\x12H\n" +
	"\x10UpdateMatchEvent\x12\x1e.match.UpdateMatchEventRequest\x1a\x14.match.MatchResponse\x12E\n" +
	"\x11GetAdminMatchList\x12\x16.google.protobuf.Empty\x1a\x18.match.MatchListResponseB@Z>github.com/abaika-abay/live_sports_project/match-service/protob\x06proto3"

var (
	file_match_service_proto_match_proto_rawDescOnce sync.Once
	file_match_service_proto_match_proto_rawDescData []byte
)

func file_match_service_proto_match_proto_rawDescGZIP() []byte {
	file_match_service_proto_match_proto_rawDescOnce.Do(func() {
		file_match_service_proto_match_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_match_service_proto_match_proto_rawDesc), len(file_match_service_proto_match_proto_rawDesc)))
	})
	return file_match_service_proto_match_proto_rawDescData
}

var file_match_service_proto_match_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_match_service_proto_match_proto_goTypes = []any{
	(*MatchRequest)(nil),            // 0: match.MatchRequest
	(*MatchResponse)(nil),           // 1: match.MatchResponse
	(*CreateMatchRequest)(nil),      // 2: match.CreateMatchRequest
	(*UpdateMatchEventRequest)(nil), // 3: match.UpdateMatchEventRequest
	(*Event)(nil),                   // 4: match.Event
	(*MatchListResponse)(nil),       // 5: match.MatchListResponse
	(*emptypb.Empty)(nil),           // 6: google.protobuf.Empty
}
var file_match_service_proto_match_proto_depIdxs = []int32{
	1, // 0: match.MatchListResponse.matches:type_name -> match.MatchResponse
	0, // 1: match.MatchService.GetMatchUpdates:input_type -> match.MatchRequest
	2, // 2: match.MatchService.CreateMatch:input_type -> match.CreateMatchRequest
	3, // 3: match.MatchService.UpdateMatchEvent:input_type -> match.UpdateMatchEventRequest
	6, // 4: match.MatchService.GetAdminMatchList:input_type -> google.protobuf.Empty
	1, // 5: match.MatchService.GetMatchUpdates:output_type -> match.MatchResponse
	1, // 6: match.MatchService.CreateMatch:output_type -> match.MatchResponse
	1, // 7: match.MatchService.UpdateMatchEvent:output_type -> match.MatchResponse
	5, // 8: match.MatchService.GetAdminMatchList:output_type -> match.MatchListResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_match_service_proto_match_proto_init() }
func file_match_service_proto_match_proto_init() {
	if File_match_service_proto_match_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_match_service_proto_match_proto_rawDesc), len(file_match_service_proto_match_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_match_service_proto_match_proto_goTypes,
		DependencyIndexes: file_match_service_proto_match_proto_depIdxs,
		MessageInfos:      file_match_service_proto_match_proto_msgTypes,
	}.Build()
	File_match_service_proto_match_proto = out.File
	file_match_service_proto_match_proto_goTypes = nil
	file_match_service_proto_match_proto_depIdxs = nil
}
